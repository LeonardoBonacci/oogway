input {
  rabbitmq {
    durable => true
    exchange => "spectre"
    host => "localhost"
    queue => "logstash"
	key => "eavesdrop"
  }	
}

filter {
	#generate a uuid for this log element
	fingerprint {
		target => "generated_id"
		method => "UUID"

		#bug in logstash (1): can not read metadata fields. we use a small workaround
		add_field => { "[@metadata][generated_id]" => "%{generated_id}" }
	}
	
	#get geo info
    geoip {
        source => "ip"
        fields => ["timezone", "latitude", "longitude", "country_name", "country_code2", "location"]
    }

	#we want to index to ES and to send a rabbit message with a different format.
	#this not being supported we differentiate manually by making a clone...
	clone {
		clones => ["rabbits"]
		add_field => { "content" => "%{generated_id}" }
	}

	#...and stripping the clone from almost all its fields
	if [type] == "rabbits" {
		prune {
			whitelist_names => [ "content" ]
		}
	} else {
		#bug in logstash (2): remove the field from the ES doc
		#we do not want to keep user info
		mutate {
			remove_field => [ "generated_id", "ip" ]
		}	
	} 
}

output { 
	stdout { codec => rubydebug { metadata => true } }
	
	if [content] {
		rabbitmq {
			exchange => 'enrichment'
			exchange_type => 'topic'
			host => "localhost"
			persistent => true
		}
	} else {
		elasticsearch {
			hosts => [ "localhost:9200" ]
			index => "logstash-spectre"
			document_type => "logs"
			#bug in logstash (3): this works fine though...
			document_id => "%{[@metadata][generated_id]}"
		}
	}	
}